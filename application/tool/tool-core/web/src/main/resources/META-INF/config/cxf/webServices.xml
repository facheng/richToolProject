<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.0.xsd ">

    <bean id="externalOperateEntityServiceImpl" class="pers.posse.tool.web.ws.impl.ExternalOperateEntityServiceImpl" />
    <bean id="encodingLoggingInInterceptor" class="pers.posse.tool.interceptor.EncodingLoggingInInterceptor" />
    <bean id="outLoggingInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />

    <!--
        JsonProvider的属性
        dropRootElement 默认为false,则Json格式会将类名作为第一个节点,如{Customer:{"id":123,"name":"John"}},
        如果配置为true，则Json格式为{"id":123,"name":"John"},而Gson等Json包会解析格式为后者.
        dropCollectionWrapperElement属性默认为false,则当遇到Collection时,Json会在集合中将容器中类名作为一个节点,
        比如{"Customer":{{"id":123,"name":"John"}}},而设置为false,则JSon格式为{{"id":123,"name":"John"}}
        serializeAsArray属性默认为false,则当遇到Collecion时,格式为{{"id":123,"name":"John"}},
        如果设置为true，则格式为[{"id":123,"name":"john"}],而Gson等解析为后者
    -->
    <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
        <property name="schemaHandler" ref="schemaHolder"/>
    </bean>

    <bean id ="jaxbProvider" class ="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
        <property name="schemaHandler" ref="schemaHolder" />
    </bean>

    <bean id="schemaHolder" class="org.apache.cxf.jaxrs.utils.schemas.SchemaHandler">
        <property name="schemas" ref="theSchemas" />
    </bean>

    <util:list id="theSchemas">
        <value>classpath:/schema/webServices.xsd</value>
    </util:list>

    <jaxrs:server id="externalInsertEntityService" address="/">
        <jaxrs:serviceBeans>
            <ref bean="externalOperateEntityServiceImpl" />
        </jaxrs:serviceBeans>

        <jaxrs:providers>
            <ref bean="jaxbProvider" />
            <ref bean='jsonProvider' />
        </jaxrs:providers>

        <jaxrs:inInterceptors>
            <ref bean="encodingLoggingInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <ref bean="outLoggingInterceptor"/>
        </jaxrs:outInterceptors>
        <jaxrs:extensionMappings>
            <entry key="json" value="application/json" />
            <entry key="xml" value="application/xml" />
            <entry key="en" value="en-gb" />
        </jaxrs:extensionMappings>
    </jaxrs:server>
</beans>